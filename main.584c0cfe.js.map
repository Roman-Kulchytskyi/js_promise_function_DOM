{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","newMessage","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACSF,kBAAAA,OAAAA,EACPD,4BAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GAFnC,gBAQN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAaC,SAASC,cAAc,OAE1CF,EAAWG,UAAUC,IAAI,WACzBJ,EAAWK,YAAcN,EACzBE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.584c0cfe.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      resolve(`\n      It was ${eventName} on the element:\n      ${element.nodeName}, id: ${element.id}.\n    `);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const newMessage = document.createElement('div');\n\n  newMessage.classList.add('message');\n  newMessage.textContent = message;\n  document.body.append(newMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}